user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log;
pid       /var/run/nginx.pid;
events {
    worker_connections 1024;
}

http {
    include      /etc/nginx/mime.types; # 옵션 항목을 설정해둔 파일의 경로
    default_type application/octet-stream; # 옥텟 스트림 기반의 http를 사용

    # 백엔드 upstream 설정 (nginx가 downstream)
    upstream docker-server {
        server server:8080; # nginx가 요청을 전달할 서버를 정의하는 지시자 (여기서는 WAS, 웹 어플리케이션 서버 host주소:포트)
    }

    server {
        listen 80;  # 서버가 리스닝할 포트를 설정하는 지시자 (server 블록 하나 당 하나의 웹 사이트 선언)
        listen [::]:80;

        server_name localhost;  # 서버의 도메인 이름을 설정하는 지시자 (request header의 host와 비교하여 일치하는 경우에만 처리)

        location / {
            root /usr/share/nginx/html; # root 지시자는 요청이 들어왔을 때, 해당 요청을 처리할 파일의 기본 경로를 설정
            index index.html index.htm; # index 지시자는 root 지시자에서 설정한 경로에서 찾을 파일의 이름을 설정
            try_files $uri $uri/ /index.html =404;  # try_files 지시자는 파일을 찾을 수 없는 경우의 처리 방법을 설정
        }

        location /api {
            proxy_pass http://fitapet_api_1; # proxy_pass 지시자는 요청을 전달할 서버의 주소를 설정
            proxy_redirect off; # proxy_redirect 지시자는 리다이렉션을 설정
            proxy_set_header Host $host; # proxy_set_header 지시자는 요청 헤더의 값을 변경
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # proxy_set_header 지시자는 요청 헤더의 값을 변경
            proxy_set_header X-Forwarded-Proto $scheme; # proxy_set_header 지시자는 요청 헤더의 값을 변경
        }

        location /socket {
            proxy_pass http://fitapet_api_1;
            proxy_http_version 1.1; # proxy_http_version 지시자는 HTTP 버전을 설정
            proxy_set_header Upgrade $http_upgrade; # proxy_set_header 지시자는 요청 헤더의 값을 변경
            proxy_set_header Connection "upgrade"; # proxy_set_header 지시자는 요청 헤더의 값을 변경
            proxy_set_header Host $host; # proxy_set_header 지시자는 요청 헤더의 값을 변경
        }

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"'; # log_format 지시자는 로그의 형식을 설정
        access_log /var/log/nginx/access.log main; # access_log 지시자는 로그 파일의 경로와 형식을 설정

        sendfile on; # sendfile 지시자는 파일 전송 방식을 설정
        server_tokens off; # server_tokens 지시자는 응답 헤더의 Server 값을 설정
        keepalive_timeout 65; # keepalive_timeout 지시자는 keep-alive 연결의 타임아웃 시간을 설정
        include /etc/nginx/conf.d/*.conf; # include 지시자는 외부 설정 파일을 포함
    }
}

server {

}